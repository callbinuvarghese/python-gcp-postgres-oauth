# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# [START cloudbuild_python_yaml]
# [START cloudbuild_python_dependencies_yaml]
steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]
# [END cloudbuild_python_dependencies_yaml]

  # [START cloudbuild_python_tests_yaml]
  # Run unit tests
  #- name: python
  #  entrypoint: python
  #  args: ["-m", "pytest", "--junitxml=${_VERSION}_test_log.xml"] 
  # [END cloudbuild_python_tests_yaml]

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           '${_ARTIFACT_REGISTRY}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SVC_IMAGE}:${_VERSION}', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  '${_ARTIFACT_REGISTRY}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SVC_IMAGE}:${_VERSION}']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '${_SVC_NAME}-${_VERSION}', 
           '--image=${_ARTIFACT_REGISTRY}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SVC_IMAGE}:${_VERSION}', 
           '--region', '${_REGIONSVC}', '--platform', 'managed', 
           '--project', '${PROJECT_ID}',
           '--vpc-connector', '${_SERVERLESS_VPC_CONNECTOR}',
           '--service-account', '${_SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com',
           '--set-env-vars=DB_HOST=${PROJECT_ID}:${_REGIONSVC}:${_DB_INSTANCE_NAME}', 
           '--set-env-vars=DB_IAM_USER=${_DB_IAM_USER}@${PROJECT_ID}.iam',
           '--set-env-vars=DB_DATABASE=${_DB_DATABASE}'] 
  
# [START cloudbuild_python_logs_yaml]
# Save test logs to Google Cloud Storage
#artifacts:
#  objects:
#    location: gs://${_BUCKET_NAME}/
#    paths:
#      - ${_VERSION}_test_log.xml
# [END cloudbuild_python_logs_yaml]
# Store images in Google Artifact Registry 
images:
  - ${_ARTIFACT_REGISTRY}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${_VERSION}
# [END cloudbuild_python_yaml]
